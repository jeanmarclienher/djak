
class response {
field int status;
field string str;
field bytes byt;
field int typ;
field array instan;

constructor response new(in int type_, in array instance_)
{
	status := 0;
	typ := type_;
	instan := instance_;
	byt := null;
	str := null;
	return this;
}

method void dispose()
{
	std.free(this);
	return;
}

method void clear()
{
	status := 0;
	if (byt != null) {
		byt.dispose();
		byt := null;
	}
	if (str != null) {
		str.dispose();
		str := null;
	}
	return;
}

method void set_string(in int status_, in array data_)
{
	status := status_;
	str := data_;
	return;	
}

method void set_bytes(in int status_, in array data_)
{
	status := status_;
	byt := data_;
	return;	
}

method int get_status()
{
	return status;
}

method array get_string()
{
	return str;
}

method array get_bytes()
{
	return byt;
}

method void validate()
{
	var Aclass aclass;
	var Aemmiter aemmiter;
	if (typ == object.$CAclass) {
		aclass := instan;
		aclass.each(this);
	} else if (typ == object.$CAemmiter) {
		aemmiter:= instan;
		aemmiter.each(this);
	}
	return;
}

} // class
